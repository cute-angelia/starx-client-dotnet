// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Message {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_pb_errorInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.errorInfo, global::pb.errorInfo.Builder> internal__static_pb_errorInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_userInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.userInfo, global::pb.userInfo.Builder> internal__static_pb_userInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_roomInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.roomInfo, global::pb.roomInfo.Builder> internal__static_pb_roomInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Login_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Login_Request, global::pb.Login_Request.Builder> internal__static_pb_Login_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Login_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Login_Response, global::pb.Login_Response.Builder> internal__static_pb_Login_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_CreateRoom_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.CreateRoom_Request, global::pb.CreateRoom_Request.Builder> internal__static_pb_CreateRoom_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_CreateRoom_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.CreateRoom_Response, global::pb.CreateRoom_Response.Builder> internal__static_pb_CreateRoom_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_JoinRoom_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Request, global::pb.JoinRoom_Request.Builder> internal__static_pb_JoinRoom_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_JoinRoom_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Response, global::pb.JoinRoom_Response.Builder> internal__static_pb_JoinRoom_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_LeaveRoom_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.LeaveRoom_Request, global::pb.LeaveRoom_Request.Builder> internal__static_pb_LeaveRoom_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_LeaveRoom_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.LeaveRoom_Response, global::pb.LeaveRoom_Response.Builder> internal__static_pb_LeaveRoom_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Input_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Input_Notify, global::pb.Input_Notify.Builder> internal__static_pb_Input_Notify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Result_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Result_Notify, global::pb.Result_Notify.Builder> internal__static_pb_Result_Notify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Ready_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Ready_Request, global::pb.Ready_Request.Builder> internal__static_pb_Ready_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Ready_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Ready_Response, global::pb.Ready_Response.Builder> internal__static_pb_Ready_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_JoinRoom_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Notify, global::pb.JoinRoom_Notify.Builder> internal__static_pb_JoinRoom_Notify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Start_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Start_Notify, global::pb.Start_Notify.Builder> internal__static_pb_Start_Notify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_InputData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.InputData, global::pb.InputData.Builder> internal__static_pb_InputData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_FrameData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.FrameData, global::pb.FrameData.Builder> internal__static_pb_FrameData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_FrameMsg_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.FrameMsg_Notify, global::pb.FrameMsg_Notify.Builder> internal__static_pb_FrameMsg_Notify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_pb_Win_Notify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::pb.Win_Notify, global::pb.Win_Notify.Builder> internal__static_pb_Win_Notify__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Message() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEgJwYiJMCgllcnJvckluZm8SFwoEY29kZRgBIAEo", 
            "BUgAUgRjb2RliAEBEhUKA21zZxgCIAEoCUgBUgNtc2eIAQFCBwoFX2NvZGVC", 
            "BgoEX21zZyJXCgh1c2VySW5mbxIVCgN1aWQYASABKANIAFIDdWlkiAEBEh8K", 
            "CG5pY2tuYW1lGAIgASgJSAFSCG5pY2tuYW1liAEBQgYKBF91aWRCCwoJX25p", 
            "Y2tuYW1lIsIBCghyb29tSW5mbxIbCgZyb29tSWQYASABKARIAFIGcm9vbUlk", 
            "iAEBEiMKCnJvb21NYXN0ZXIYBCABKANIAVIKcm9vbU1hc3RlcogBARIjCgpy", 
            "YW5kb21TZWVkGAIgASgDSAJSCnJhbmRvbVNlZWSIAQESJgoHcGxheWVycxgD", 
            "IAMoCzIMLnBiLnVzZXJJbmZvUgdwbGF5ZXJzQgkKB19yb29tSWRCDQoLX3Jv", 
            "b21NYXN0ZXJCDQoLX3JhbmRvbVNlZWQiLgoNTG9naW5fUmVxdWVzdBIVCgN1", 
            "aWQYASABKANIAFIDdWlkiAEBQgYKBF91aWQiRAoOTG9naW5fUmVzcG9uc2US", 
            "KAoFZXJyb3IYASABKAsyDS5wYi5lcnJvckluZm9IAFIFZXJyb3KIAQFCCAoG", 
            "X2Vycm9yInwKEkNyZWF0ZVJvb21fUmVxdWVzdBIbCgZyb29tSWQYASABKARI", 
            "AFIGcm9vbUlkiAEBEisKDm1heFBsYXllckNvdW50GAIgASgNSAFSDm1heFBs", 
            "YXllckNvdW50iAEBQgkKB19yb29tSWRCEQoPX21heFBsYXllckNvdW50InkK", 
            "E0NyZWF0ZVJvb21fUmVzcG9uc2USKAoFZXJyb3IYASABKAsyDS5wYi5lcnJv", 
            "ckluZm9IAFIFZXJyb3KIAQESJQoEZGF0YRgCIAEoCzIMLnBiLnJvb21JbmZv", 
            "SAFSBGRhdGGIAQFCCAoGX2Vycm9yQgcKBV9kYXRhIlkKEEpvaW5Sb29tX1Jl", 
            "cXVlc3QSFQoDdWlkGAEgASgDSABSA3VpZIgBARIbCgZyb29tSWQYAiABKARI", 
            "AVIGcm9vbUlkiAEBQgYKBF91aWRCCQoHX3Jvb21JZCJ3ChFKb2luUm9vbV9S", 
            "ZXNwb25zZRIoCgVlcnJvchgBIAEoCzINLnBiLmVycm9ySW5mb0gAUgVlcnJv", 
            "cogBARIlCgRkYXRhGAIgASgLMgwucGIucm9vbUluZm9IAVIEZGF0YYgBAUII", 
            "CgZfZXJyb3JCBwoFX2RhdGEiOwoRTGVhdmVSb29tX1JlcXVlc3QSGwoGcm9v", 
            "bUlkGAEgASgESABSBnJvb21JZIgBAUIJCgdfcm9vbUlkIkgKEkxlYXZlUm9v", 
            "bV9SZXNwb25zZRIoCgVlcnJvchgBIAEoCzINLnBiLmVycm9ySW5mb0gAUgVl", 
            "cnJvcogBAUIICgZfZXJyb3IisgEKDElucHV0X05vdGlmeRIdCgdmcmFtZUlE", 
            "GAQgASgNSABSB2ZyYW1lSUSIAQESFQoDc2lkGAEgASgNSAFSA3NpZIgBARIR", 
            "CgF4GAIgASgCSAJSAXiIAQESEQoBeRgDIAEoAkgDUgF5iAEBEhsKBnVuaXRp", 
            "ZBgFIAEoDUgEUgZ1bml0aWSIAQFCCgoIX2ZyYW1lSURCBgoEX3NpZEIECgJf", 
            "eEIECgJfeUIJCgdfdW5pdGlkIj0KDVJlc3VsdF9Ob3RpZnkSHwoId2lubmVy", 
            "SUQYASABKARIAFIId2lubmVySUSIAQFCCwoJX3dpbm5lcklEIg8KDVJlYWR5", 
            "X1JlcXVlc3QiRAoOUmVhZHlfUmVzcG9uc2USKAoFZXJyb3IYASABKAsyDS5w", 
            "Yi5lcnJvckluZm9IAFIFZXJyb3KIAQFCCAoGX2Vycm9yIkEKD0pvaW5Sb29t", 
            "X05vdGlmeRIlCgRkYXRhGAIgASgLMgwucGIucm9vbUluZm9IAFIEZGF0YYgB", 
            "AUIHCgVfZGF0YSIOCgxTdGFydF9Ob3RpZnkiowEKCUlucHV0RGF0YRIVCgNz", 
            "aWQYASABKA1IAFIDc2lkiAEBEhEKAXgYAiABKAJIAVIBeIgBARIRCgF5GAMg", 
            "ASgCSAJSAXmIAQESGwoGdW5pdGlkGAQgASgNSANSBnVuaXRpZIgBARIVCgN1", 
            "aWQYFSABKARIBFIDdWlkiAEBQgYKBF9zaWRCBAoCX3hCBAoCX3lCCQoHX3Vu", 
            "aXRpZEIGCgRfdWlkIlsKCUZyYW1lRGF0YRIdCgdmcmFtZUlEGAEgASgNSABS", 
            "B2ZyYW1lSUSIAQESIwoFaW5wdXQYAiADKAsyDS5wYi5JbnB1dERhdGFSBWlu", 
            "cHV0QgoKCF9mcmFtZUlEIjgKD0ZyYW1lTXNnX05vdGlmeRIlCgZmcmFtZXMY", 
            "ASADKAsyDS5wYi5GcmFtZURhdGFSBmZyYW1lcyI6CgpXaW5fTm90aWZ5Eh8K", 
            "CHdpbm5lcklEGAEgASgESABSCHdpbm5lcklEiAEBQgsKCV93aW5uZXJJREIG", 
          "WgQuL3BiYgZwcm90bzM="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_pb_errorInfo__Descriptor = Descriptor.MessageTypes[0];
        internal__static_pb_errorInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.errorInfo, global::pb.errorInfo.Builder>(internal__static_pb_errorInfo__Descriptor,
                new string[] { "Code", "Msg", });
        internal__static_pb_userInfo__Descriptor = Descriptor.MessageTypes[1];
        internal__static_pb_userInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.userInfo, global::pb.userInfo.Builder>(internal__static_pb_userInfo__Descriptor,
                new string[] { "Uid", "Nickname", });
        internal__static_pb_roomInfo__Descriptor = Descriptor.MessageTypes[2];
        internal__static_pb_roomInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.roomInfo, global::pb.roomInfo.Builder>(internal__static_pb_roomInfo__Descriptor,
                new string[] { "RoomId", "RoomMaster", "RandomSeed", "Players", });
        internal__static_pb_Login_Request__Descriptor = Descriptor.MessageTypes[3];
        internal__static_pb_Login_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Login_Request, global::pb.Login_Request.Builder>(internal__static_pb_Login_Request__Descriptor,
                new string[] { "Uid", });
        internal__static_pb_Login_Response__Descriptor = Descriptor.MessageTypes[4];
        internal__static_pb_Login_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Login_Response, global::pb.Login_Response.Builder>(internal__static_pb_Login_Response__Descriptor,
                new string[] { "Error", });
        internal__static_pb_CreateRoom_Request__Descriptor = Descriptor.MessageTypes[5];
        internal__static_pb_CreateRoom_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.CreateRoom_Request, global::pb.CreateRoom_Request.Builder>(internal__static_pb_CreateRoom_Request__Descriptor,
                new string[] { "RoomId", "MaxPlayerCount", });
        internal__static_pb_CreateRoom_Response__Descriptor = Descriptor.MessageTypes[6];
        internal__static_pb_CreateRoom_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.CreateRoom_Response, global::pb.CreateRoom_Response.Builder>(internal__static_pb_CreateRoom_Response__Descriptor,
                new string[] { "Error", "Data", });
        internal__static_pb_JoinRoom_Request__Descriptor = Descriptor.MessageTypes[7];
        internal__static_pb_JoinRoom_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Request, global::pb.JoinRoom_Request.Builder>(internal__static_pb_JoinRoom_Request__Descriptor,
                new string[] { "Uid", "RoomId", });
        internal__static_pb_JoinRoom_Response__Descriptor = Descriptor.MessageTypes[8];
        internal__static_pb_JoinRoom_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Response, global::pb.JoinRoom_Response.Builder>(internal__static_pb_JoinRoom_Response__Descriptor,
                new string[] { "Error", "Data", });
        internal__static_pb_LeaveRoom_Request__Descriptor = Descriptor.MessageTypes[9];
        internal__static_pb_LeaveRoom_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.LeaveRoom_Request, global::pb.LeaveRoom_Request.Builder>(internal__static_pb_LeaveRoom_Request__Descriptor,
                new string[] { "RoomId", });
        internal__static_pb_LeaveRoom_Response__Descriptor = Descriptor.MessageTypes[10];
        internal__static_pb_LeaveRoom_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.LeaveRoom_Response, global::pb.LeaveRoom_Response.Builder>(internal__static_pb_LeaveRoom_Response__Descriptor,
                new string[] { "Error", });
        internal__static_pb_Input_Notify__Descriptor = Descriptor.MessageTypes[11];
        internal__static_pb_Input_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Input_Notify, global::pb.Input_Notify.Builder>(internal__static_pb_Input_Notify__Descriptor,
                new string[] { "FrameID", "Sid", "X", "Y", "Unitid", });
        internal__static_pb_Result_Notify__Descriptor = Descriptor.MessageTypes[12];
        internal__static_pb_Result_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Result_Notify, global::pb.Result_Notify.Builder>(internal__static_pb_Result_Notify__Descriptor,
                new string[] { "WinnerID", });
        internal__static_pb_Ready_Request__Descriptor = Descriptor.MessageTypes[13];
        internal__static_pb_Ready_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Ready_Request, global::pb.Ready_Request.Builder>(internal__static_pb_Ready_Request__Descriptor,
                new string[] { });
        internal__static_pb_Ready_Response__Descriptor = Descriptor.MessageTypes[14];
        internal__static_pb_Ready_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Ready_Response, global::pb.Ready_Response.Builder>(internal__static_pb_Ready_Response__Descriptor,
                new string[] { "Error", });
        internal__static_pb_JoinRoom_Notify__Descriptor = Descriptor.MessageTypes[15];
        internal__static_pb_JoinRoom_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.JoinRoom_Notify, global::pb.JoinRoom_Notify.Builder>(internal__static_pb_JoinRoom_Notify__Descriptor,
                new string[] { "Data", });
        internal__static_pb_Start_Notify__Descriptor = Descriptor.MessageTypes[16];
        internal__static_pb_Start_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Start_Notify, global::pb.Start_Notify.Builder>(internal__static_pb_Start_Notify__Descriptor,
                new string[] { });
        internal__static_pb_InputData__Descriptor = Descriptor.MessageTypes[17];
        internal__static_pb_InputData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.InputData, global::pb.InputData.Builder>(internal__static_pb_InputData__Descriptor,
                new string[] { "Sid", "X", "Y", "Unitid", "Uid", });
        internal__static_pb_FrameData__Descriptor = Descriptor.MessageTypes[18];
        internal__static_pb_FrameData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.FrameData, global::pb.FrameData.Builder>(internal__static_pb_FrameData__Descriptor,
                new string[] { "FrameID", "Input", });
        internal__static_pb_FrameMsg_Notify__Descriptor = Descriptor.MessageTypes[19];
        internal__static_pb_FrameMsg_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.FrameMsg_Notify, global::pb.FrameMsg_Notify.Builder>(internal__static_pb_FrameMsg_Notify__Descriptor,
                new string[] { "Frames", });
        internal__static_pb_Win_Notify__Descriptor = Descriptor.MessageTypes[20];
        internal__static_pb_Win_Notify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::pb.Win_Notify, global::pb.Win_Notify.Builder>(internal__static_pb_Win_Notify__Descriptor,
                new string[] { "WinnerID", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class errorInfo : pb::GeneratedMessage<errorInfo, errorInfo.Builder> {
    private errorInfo() { }
    private static readonly errorInfo defaultInstance = new errorInfo().MakeReadOnly();
    private static readonly string[] _errorInfoFieldNames = new string[] { "code", "msg" };
    private static readonly uint[] _errorInfoFieldTags = new uint[] { 8, 18 };
    public static errorInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override errorInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override errorInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_errorInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<errorInfo, errorInfo.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_errorInfo__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private int code_;
    public bool HasCode {
      get { return hasCode; }
    }
    public int Code {
      get { return code_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _errorInfoFieldNames;
      if (hasCode) {
        output.WriteInt32(1, field_names[0], Code);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[1], Msg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Code);
      }
      if (hasMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static errorInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static errorInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static errorInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static errorInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static errorInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static errorInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static errorInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static errorInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static errorInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static errorInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private errorInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(errorInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<errorInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(errorInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private errorInfo result;
      
      private errorInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          errorInfo original = result;
          result = new errorInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override errorInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.errorInfo.Descriptor; }
      }
      
      public override errorInfo DefaultInstanceForType {
        get { return global::pb.errorInfo.DefaultInstance; }
      }
      
      public override errorInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is errorInfo) {
          return MergeFrom((errorInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(errorInfo other) {
        if (other == global::pb.errorInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_errorInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _errorInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCode = input.ReadInt32(ref result.code_);
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public int Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(int value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
    }
    static errorInfo() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class userInfo : pb::GeneratedMessage<userInfo, userInfo.Builder> {
    private userInfo() { }
    private static readonly userInfo defaultInstance = new userInfo().MakeReadOnly();
    private static readonly string[] _userInfoFieldNames = new string[] { "nickname", "uid" };
    private static readonly uint[] _userInfoFieldTags = new uint[] { 18, 8 };
    public static userInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override userInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override userInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_userInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<userInfo, userInfo.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_userInfo__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private long uid_;
    public bool HasUid {
      get { return hasUid; }
    }
    public long Uid {
      get { return uid_; }
    }
    
    public const int NicknameFieldNumber = 2;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userInfoFieldNames;
      if (hasUid) {
        output.WriteInt64(1, field_names[1], Uid);
      }
      if (hasNickname) {
        output.WriteString(2, field_names[0], Nickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Nickname);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static userInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static userInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static userInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static userInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static userInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static userInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static userInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static userInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static userInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static userInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private userInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(userInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<userInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(userInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private userInfo result;
      
      private userInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          userInfo original = result;
          result = new userInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override userInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.userInfo.Descriptor; }
      }
      
      public override userInfo DefaultInstanceForType {
        get { return global::pb.userInfo.DefaultInstance; }
      }
      
      public override userInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is userInfo) {
          return MergeFrom((userInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(userInfo other) {
        if (other == global::pb.userInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUid = input.ReadInt64(ref result.uid_);
              break;
            }
            case 18: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public long Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(long value) {
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = 0L;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
    }
    static userInfo() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class roomInfo : pb::GeneratedMessage<roomInfo, roomInfo.Builder> {
    private roomInfo() { }
    private static readonly roomInfo defaultInstance = new roomInfo().MakeReadOnly();
    private static readonly string[] _roomInfoFieldNames = new string[] { "players", "randomSeed", "roomId", "roomMaster" };
    private static readonly uint[] _roomInfoFieldTags = new uint[] { 26, 16, 8, 32 };
    public static roomInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override roomInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override roomInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_roomInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<roomInfo, roomInfo.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_roomInfo__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private ulong roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RoomId {
      get { return roomId_; }
    }
    
    public const int RoomMasterFieldNumber = 4;
    private bool hasRoomMaster;
    private long roomMaster_;
    public bool HasRoomMaster {
      get { return hasRoomMaster; }
    }
    public long RoomMaster {
      get { return roomMaster_; }
    }
    
    public const int RandomSeedFieldNumber = 2;
    private bool hasRandomSeed;
    private long randomSeed_;
    public bool HasRandomSeed {
      get { return hasRandomSeed; }
    }
    public long RandomSeed {
      get { return randomSeed_; }
    }
    
    public const int PlayersFieldNumber = 3;
    private pbc::PopsicleList<global::pb.userInfo> players_ = new pbc::PopsicleList<global::pb.userInfo>();
    public scg::IList<global::pb.userInfo> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::pb.userInfo GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roomInfoFieldNames;
      if (hasRoomId) {
        output.WriteUInt64(1, field_names[2], RoomId);
      }
      if (hasRandomSeed) {
        output.WriteInt64(2, field_names[1], RandomSeed);
      }
      if (players_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], players_);
      }
      if (hasRoomMaster) {
        output.WriteInt64(4, field_names[3], RoomMaster);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RoomId);
      }
      if (hasRoomMaster) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, RoomMaster);
      }
      if (hasRandomSeed) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, RandomSeed);
      }
      foreach (global::pb.userInfo element in PlayersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static roomInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static roomInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static roomInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static roomInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static roomInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static roomInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static roomInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static roomInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static roomInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static roomInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private roomInfo MakeReadOnly() {
      players_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(roomInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<roomInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(roomInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private roomInfo result;
      
      private roomInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          roomInfo original = result;
          result = new roomInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override roomInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.roomInfo.Descriptor; }
      }
      
      public override roomInfo DefaultInstanceForType {
        get { return global::pb.roomInfo.DefaultInstance; }
      }
      
      public override roomInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is roomInfo) {
          return MergeFrom((roomInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(roomInfo other) {
        if (other == global::pb.roomInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasRoomMaster) {
          RoomMaster = other.RoomMaster;
        }
        if (other.HasRandomSeed) {
          RandomSeed = other.RandomSeed;
        }
        if (other.players_.Count != 0) {
          result.players_.Add(other.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadUInt64(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasRandomSeed = input.ReadInt64(ref result.randomSeed_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.players_, global::pb.userInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasRoomMaster = input.ReadInt64(ref result.roomMaster_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRoomId(ulong value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0UL;
        return this;
      }
      
      public bool HasRoomMaster {
        get { return result.hasRoomMaster; }
      }
      public long RoomMaster {
        get { return result.RoomMaster; }
        set { SetRoomMaster(value); }
      }
      public Builder SetRoomMaster(long value) {
        PrepareBuilder();
        result.hasRoomMaster = true;
        result.roomMaster_ = value;
        return this;
      }
      public Builder ClearRoomMaster() {
        PrepareBuilder();
        result.hasRoomMaster = false;
        result.roomMaster_ = 0L;
        return this;
      }
      
      public bool HasRandomSeed {
        get { return result.hasRandomSeed; }
      }
      public long RandomSeed {
        get { return result.RandomSeed; }
        set { SetRandomSeed(value); }
      }
      public Builder SetRandomSeed(long value) {
        PrepareBuilder();
        result.hasRandomSeed = true;
        result.randomSeed_ = value;
        return this;
      }
      public Builder ClearRandomSeed() {
        PrepareBuilder();
        result.hasRandomSeed = false;
        result.randomSeed_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<global::pb.userInfo> PlayersList {
        get { return PrepareBuilder().players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::pb.userInfo GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::pb.userInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::pb.userInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::pb.userInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::pb.userInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::pb.userInfo> values) {
        PrepareBuilder();
        result.players_.Add(values);
        return this;
      }
      public Builder ClearPlayers() {
        PrepareBuilder();
        result.players_.Clear();
        return this;
      }
    }
    static roomInfo() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Login_Request : pb::GeneratedMessage<Login_Request, Login_Request.Builder> {
    private Login_Request() { }
    private static readonly Login_Request defaultInstance = new Login_Request().MakeReadOnly();
    private static readonly string[] _loginRequestFieldNames = new string[] { "uid" };
    private static readonly uint[] _loginRequestFieldTags = new uint[] { 8 };
    public static Login_Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Login_Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Login_Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Login_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Login_Request, Login_Request.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Login_Request__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private long uid_;
    public bool HasUid {
      get { return hasUid; }
    }
    public long Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginRequestFieldNames;
      if (hasUid) {
        output.WriteInt64(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Login_Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Login_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Login_Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Login_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Login_Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Login_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Login_Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Login_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Login_Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Login_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Login_Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Login_Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Login_Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Login_Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Login_Request result;
      
      private Login_Request PrepareBuilder() {
        if (resultIsReadOnly) {
          Login_Request original = result;
          result = new Login_Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Login_Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Login_Request.Descriptor; }
      }
      
      public override Login_Request DefaultInstanceForType {
        get { return global::pb.Login_Request.DefaultInstance; }
      }
      
      public override Login_Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Login_Request) {
          return MergeFrom((Login_Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Login_Request other) {
        if (other == global::pb.Login_Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUid = input.ReadInt64(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public long Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(long value) {
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = 0L;
        return this;
      }
    }
    static Login_Request() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Login_Response : pb::GeneratedMessage<Login_Response, Login_Response.Builder> {
    private Login_Response() { }
    private static readonly Login_Response defaultInstance = new Login_Response().MakeReadOnly();
    private static readonly string[] _loginResponseFieldNames = new string[] { "error" };
    private static readonly uint[] _loginResponseFieldTags = new uint[] { 10 };
    public static Login_Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Login_Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Login_Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Login_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Login_Response, Login_Response.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Login_Response__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private global::pb.errorInfo error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::pb.errorInfo Error {
      get { return error_ ?? global::pb.errorInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginResponseFieldNames;
      if (hasError) {
        output.WriteMessage(1, field_names[0], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Error);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Login_Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Login_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Login_Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Login_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Login_Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Login_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Login_Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Login_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Login_Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Login_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Login_Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Login_Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Login_Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Login_Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Login_Response result;
      
      private Login_Response PrepareBuilder() {
        if (resultIsReadOnly) {
          Login_Response original = result;
          result = new Login_Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Login_Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Login_Response.Descriptor; }
      }
      
      public override Login_Response DefaultInstanceForType {
        get { return global::pb.Login_Response.DefaultInstance; }
      }
      
      public override Login_Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Login_Response) {
          return MergeFrom((Login_Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Login_Response other) {
        if (other == global::pb.Login_Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          MergeError(other.Error);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pb.errorInfo.Builder subBuilder = global::pb.errorInfo.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::pb.errorInfo Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::pb.errorInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::pb.errorInfo.DefaultInstance) {
            result.error_ = global::pb.errorInfo.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
    }
    static Login_Response() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateRoom_Request : pb::GeneratedMessage<CreateRoom_Request, CreateRoom_Request.Builder> {
    private CreateRoom_Request() { }
    private static readonly CreateRoom_Request defaultInstance = new CreateRoom_Request().MakeReadOnly();
    private static readonly string[] _createRoomRequestFieldNames = new string[] { "maxPlayerCount", "roomId" };
    private static readonly uint[] _createRoomRequestFieldTags = new uint[] { 16, 8 };
    public static CreateRoom_Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateRoom_Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateRoom_Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_CreateRoom_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateRoom_Request, CreateRoom_Request.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_CreateRoom_Request__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private ulong roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RoomId {
      get { return roomId_; }
    }
    
    public const int MaxPlayerCountFieldNumber = 2;
    private bool hasMaxPlayerCount;
    private uint maxPlayerCount_;
    public bool HasMaxPlayerCount {
      get { return hasMaxPlayerCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint MaxPlayerCount {
      get { return maxPlayerCount_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createRoomRequestFieldNames;
      if (hasRoomId) {
        output.WriteUInt64(1, field_names[1], RoomId);
      }
      if (hasMaxPlayerCount) {
        output.WriteUInt32(2, field_names[0], MaxPlayerCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RoomId);
      }
      if (hasMaxPlayerCount) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, MaxPlayerCount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateRoom_Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateRoom_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoom_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateRoom_Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateRoom_Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateRoom_Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateRoom_Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateRoom_Request result;
      
      private CreateRoom_Request PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateRoom_Request original = result;
          result = new CreateRoom_Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateRoom_Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.CreateRoom_Request.Descriptor; }
      }
      
      public override CreateRoom_Request DefaultInstanceForType {
        get { return global::pb.CreateRoom_Request.DefaultInstance; }
      }
      
      public override CreateRoom_Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateRoom_Request) {
          return MergeFrom((CreateRoom_Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateRoom_Request other) {
        if (other == global::pb.CreateRoom_Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasMaxPlayerCount) {
          MaxPlayerCount = other.MaxPlayerCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadUInt64(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasMaxPlayerCount = input.ReadUInt32(ref result.maxPlayerCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRoomId(ulong value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0UL;
        return this;
      }
      
      public bool HasMaxPlayerCount {
        get { return result.hasMaxPlayerCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint MaxPlayerCount {
        get { return result.MaxPlayerCount; }
        set { SetMaxPlayerCount(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxPlayerCount(uint value) {
        PrepareBuilder();
        result.hasMaxPlayerCount = true;
        result.maxPlayerCount_ = value;
        return this;
      }
      public Builder ClearMaxPlayerCount() {
        PrepareBuilder();
        result.hasMaxPlayerCount = false;
        result.maxPlayerCount_ = 0;
        return this;
      }
    }
    static CreateRoom_Request() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateRoom_Response : pb::GeneratedMessage<CreateRoom_Response, CreateRoom_Response.Builder> {
    private CreateRoom_Response() { }
    private static readonly CreateRoom_Response defaultInstance = new CreateRoom_Response().MakeReadOnly();
    private static readonly string[] _createRoomResponseFieldNames = new string[] { "data", "error" };
    private static readonly uint[] _createRoomResponseFieldTags = new uint[] { 18, 10 };
    public static CreateRoom_Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateRoom_Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateRoom_Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_CreateRoom_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateRoom_Response, CreateRoom_Response.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_CreateRoom_Response__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private global::pb.errorInfo error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::pb.errorInfo Error {
      get { return error_ ?? global::pb.errorInfo.DefaultInstance; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::pb.roomInfo data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::pb.roomInfo Data {
      get { return data_ ?? global::pb.roomInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createRoomResponseFieldNames;
      if (hasError) {
        output.WriteMessage(1, field_names[1], Error);
      }
      if (hasData) {
        output.WriteMessage(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Error);
      }
      if (hasData) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateRoom_Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateRoom_Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateRoom_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoom_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateRoom_Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateRoom_Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateRoom_Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateRoom_Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateRoom_Response result;
      
      private CreateRoom_Response PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateRoom_Response original = result;
          result = new CreateRoom_Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateRoom_Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.CreateRoom_Response.Descriptor; }
      }
      
      public override CreateRoom_Response DefaultInstanceForType {
        get { return global::pb.CreateRoom_Response.DefaultInstance; }
      }
      
      public override CreateRoom_Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateRoom_Response) {
          return MergeFrom((CreateRoom_Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateRoom_Response other) {
        if (other == global::pb.CreateRoom_Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pb.errorInfo.Builder subBuilder = global::pb.errorInfo.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::pb.roomInfo.Builder subBuilder = global::pb.roomInfo.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::pb.errorInfo Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::pb.errorInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::pb.errorInfo.DefaultInstance) {
            result.error_ = global::pb.errorInfo.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::pb.roomInfo Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::pb.roomInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::pb.roomInfo.DefaultInstance) {
            result.data_ = global::pb.roomInfo.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static CreateRoom_Response() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinRoom_Request : pb::GeneratedMessage<JoinRoom_Request, JoinRoom_Request.Builder> {
    private JoinRoom_Request() { }
    private static readonly JoinRoom_Request defaultInstance = new JoinRoom_Request().MakeReadOnly();
    private static readonly string[] _joinRoomRequestFieldNames = new string[] { "roomId", "uid" };
    private static readonly uint[] _joinRoomRequestFieldTags = new uint[] { 16, 8 };
    public static JoinRoom_Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRoom_Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRoom_Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRoom_Request, JoinRoom_Request.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Request__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private long uid_;
    public bool HasUid {
      get { return hasUid; }
    }
    public long Uid {
      get { return uid_; }
    }
    
    public const int RoomIdFieldNumber = 2;
    private bool hasRoomId;
    private ulong roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RoomId {
      get { return roomId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinRoomRequestFieldNames;
      if (hasUid) {
        output.WriteInt64(1, field_names[1], Uid);
      }
      if (hasRoomId) {
        output.WriteUInt64(2, field_names[0], RoomId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, RoomId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinRoom_Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRoom_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRoom_Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRoom_Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRoom_Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRoom_Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRoom_Request result;
      
      private JoinRoom_Request PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRoom_Request original = result;
          result = new JoinRoom_Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRoom_Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.JoinRoom_Request.Descriptor; }
      }
      
      public override JoinRoom_Request DefaultInstanceForType {
        get { return global::pb.JoinRoom_Request.DefaultInstance; }
      }
      
      public override JoinRoom_Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRoom_Request) {
          return MergeFrom((JoinRoom_Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRoom_Request other) {
        if (other == global::pb.JoinRoom_Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUid = input.ReadInt64(ref result.uid_);
              break;
            }
            case 16: {
              result.hasRoomId = input.ReadUInt64(ref result.roomId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public long Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(long value) {
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = 0L;
        return this;
      }
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRoomId(ulong value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0UL;
        return this;
      }
    }
    static JoinRoom_Request() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinRoom_Response : pb::GeneratedMessage<JoinRoom_Response, JoinRoom_Response.Builder> {
    private JoinRoom_Response() { }
    private static readonly JoinRoom_Response defaultInstance = new JoinRoom_Response().MakeReadOnly();
    private static readonly string[] _joinRoomResponseFieldNames = new string[] { "data", "error" };
    private static readonly uint[] _joinRoomResponseFieldTags = new uint[] { 18, 10 };
    public static JoinRoom_Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRoom_Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRoom_Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRoom_Response, JoinRoom_Response.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Response__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private global::pb.errorInfo error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::pb.errorInfo Error {
      get { return error_ ?? global::pb.errorInfo.DefaultInstance; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::pb.roomInfo data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::pb.roomInfo Data {
      get { return data_ ?? global::pb.roomInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinRoomResponseFieldNames;
      if (hasError) {
        output.WriteMessage(1, field_names[1], Error);
      }
      if (hasData) {
        output.WriteMessage(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Error);
      }
      if (hasData) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinRoom_Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRoom_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRoom_Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRoom_Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRoom_Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRoom_Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRoom_Response result;
      
      private JoinRoom_Response PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRoom_Response original = result;
          result = new JoinRoom_Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRoom_Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.JoinRoom_Response.Descriptor; }
      }
      
      public override JoinRoom_Response DefaultInstanceForType {
        get { return global::pb.JoinRoom_Response.DefaultInstance; }
      }
      
      public override JoinRoom_Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRoom_Response) {
          return MergeFrom((JoinRoom_Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRoom_Response other) {
        if (other == global::pb.JoinRoom_Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pb.errorInfo.Builder subBuilder = global::pb.errorInfo.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::pb.roomInfo.Builder subBuilder = global::pb.roomInfo.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::pb.errorInfo Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::pb.errorInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::pb.errorInfo.DefaultInstance) {
            result.error_ = global::pb.errorInfo.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::pb.roomInfo Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::pb.roomInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::pb.roomInfo.DefaultInstance) {
            result.data_ = global::pb.roomInfo.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static JoinRoom_Response() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LeaveRoom_Request : pb::GeneratedMessage<LeaveRoom_Request, LeaveRoom_Request.Builder> {
    private LeaveRoom_Request() { }
    private static readonly LeaveRoom_Request defaultInstance = new LeaveRoom_Request().MakeReadOnly();
    private static readonly string[] _leaveRoomRequestFieldNames = new string[] { "roomId" };
    private static readonly uint[] _leaveRoomRequestFieldTags = new uint[] { 8 };
    public static LeaveRoom_Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveRoom_Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LeaveRoom_Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_LeaveRoom_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveRoom_Request, LeaveRoom_Request.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_LeaveRoom_Request__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private ulong roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RoomId {
      get { return roomId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _leaveRoomRequestFieldNames;
      if (hasRoomId) {
        output.WriteUInt64(1, field_names[0], RoomId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RoomId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LeaveRoom_Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveRoom_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRoom_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LeaveRoom_Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveRoom_Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveRoom_Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LeaveRoom_Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LeaveRoom_Request result;
      
      private LeaveRoom_Request PrepareBuilder() {
        if (resultIsReadOnly) {
          LeaveRoom_Request original = result;
          result = new LeaveRoom_Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LeaveRoom_Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.LeaveRoom_Request.Descriptor; }
      }
      
      public override LeaveRoom_Request DefaultInstanceForType {
        get { return global::pb.LeaveRoom_Request.DefaultInstance; }
      }
      
      public override LeaveRoom_Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LeaveRoom_Request) {
          return MergeFrom((LeaveRoom_Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LeaveRoom_Request other) {
        if (other == global::pb.LeaveRoom_Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_leaveRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _leaveRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadUInt64(ref result.roomId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRoomId(ulong value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0UL;
        return this;
      }
    }
    static LeaveRoom_Request() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LeaveRoom_Response : pb::GeneratedMessage<LeaveRoom_Response, LeaveRoom_Response.Builder> {
    private LeaveRoom_Response() { }
    private static readonly LeaveRoom_Response defaultInstance = new LeaveRoom_Response().MakeReadOnly();
    private static readonly string[] _leaveRoomResponseFieldNames = new string[] { "error" };
    private static readonly uint[] _leaveRoomResponseFieldTags = new uint[] { 10 };
    public static LeaveRoom_Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LeaveRoom_Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LeaveRoom_Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_LeaveRoom_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LeaveRoom_Response, LeaveRoom_Response.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_LeaveRoom_Response__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private global::pb.errorInfo error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::pb.errorInfo Error {
      get { return error_ ?? global::pb.errorInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _leaveRoomResponseFieldNames;
      if (hasError) {
        output.WriteMessage(1, field_names[0], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Error);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LeaveRoom_Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LeaveRoom_Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LeaveRoom_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LeaveRoom_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LeaveRoom_Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LeaveRoom_Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LeaveRoom_Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LeaveRoom_Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LeaveRoom_Response result;
      
      private LeaveRoom_Response PrepareBuilder() {
        if (resultIsReadOnly) {
          LeaveRoom_Response original = result;
          result = new LeaveRoom_Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LeaveRoom_Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.LeaveRoom_Response.Descriptor; }
      }
      
      public override LeaveRoom_Response DefaultInstanceForType {
        get { return global::pb.LeaveRoom_Response.DefaultInstance; }
      }
      
      public override LeaveRoom_Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LeaveRoom_Response) {
          return MergeFrom((LeaveRoom_Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LeaveRoom_Response other) {
        if (other == global::pb.LeaveRoom_Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          MergeError(other.Error);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_leaveRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _leaveRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pb.errorInfo.Builder subBuilder = global::pb.errorInfo.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::pb.errorInfo Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::pb.errorInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::pb.errorInfo.DefaultInstance) {
            result.error_ = global::pb.errorInfo.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
    }
    static LeaveRoom_Response() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Input_Notify : pb::GeneratedMessage<Input_Notify, Input_Notify.Builder> {
    private Input_Notify() { }
    private static readonly Input_Notify defaultInstance = new Input_Notify().MakeReadOnly();
    private static readonly string[] _inputNotifyFieldNames = new string[] { "frameID", "sid", "unitid", "x", "y" };
    private static readonly uint[] _inputNotifyFieldTags = new uint[] { 32, 8, 40, 21, 29 };
    public static Input_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Input_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Input_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Input_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Input_Notify, Input_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Input_Notify__FieldAccessorTable; }
    }
    
    public const int FrameIDFieldNumber = 4;
    private bool hasFrameID;
    private uint frameID_;
    public bool HasFrameID {
      get { return hasFrameID; }
    }
    [global::System.CLSCompliant(false)]
    public uint FrameID {
      get { return frameID_; }
    }
    
    public const int SidFieldNumber = 1;
    private bool hasSid;
    private uint sid_;
    public bool HasSid {
      get { return hasSid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Sid {
      get { return sid_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int UnitidFieldNumber = 5;
    private bool hasUnitid;
    private uint unitid_;
    public bool HasUnitid {
      get { return hasUnitid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Unitid {
      get { return unitid_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inputNotifyFieldNames;
      if (hasSid) {
        output.WriteUInt32(1, field_names[1], Sid);
      }
      if (hasX) {
        output.WriteFloat(2, field_names[3], X);
      }
      if (hasY) {
        output.WriteFloat(3, field_names[4], Y);
      }
      if (hasFrameID) {
        output.WriteUInt32(4, field_names[0], FrameID);
      }
      if (hasUnitid) {
        output.WriteUInt32(5, field_names[2], Unitid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrameID) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, FrameID);
      }
      if (hasSid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Sid);
      }
      if (hasX) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Y);
      }
      if (hasUnitid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Unitid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Input_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Input_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Input_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Input_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Input_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Input_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Input_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Input_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Input_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Input_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Input_Notify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Input_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Input_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Input_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Input_Notify result;
      
      private Input_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          Input_Notify original = result;
          result = new Input_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Input_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Input_Notify.Descriptor; }
      }
      
      public override Input_Notify DefaultInstanceForType {
        get { return global::pb.Input_Notify.DefaultInstance; }
      }
      
      public override Input_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Input_Notify) {
          return MergeFrom((Input_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Input_Notify other) {
        if (other == global::pb.Input_Notify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrameID) {
          FrameID = other.FrameID;
        }
        if (other.HasSid) {
          Sid = other.Sid;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasUnitid) {
          Unitid = other.Unitid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inputNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inputNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSid = input.ReadUInt32(ref result.sid_);
              break;
            }
            case 21: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 29: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 32: {
              result.hasFrameID = input.ReadUInt32(ref result.frameID_);
              break;
            }
            case 40: {
              result.hasUnitid = input.ReadUInt32(ref result.unitid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrameID {
        get { return result.hasFrameID; }
      }
      [global::System.CLSCompliant(false)]
      public uint FrameID {
        get { return result.FrameID; }
        set { SetFrameID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFrameID(uint value) {
        PrepareBuilder();
        result.hasFrameID = true;
        result.frameID_ = value;
        return this;
      }
      public Builder ClearFrameID() {
        PrepareBuilder();
        result.hasFrameID = false;
        result.frameID_ = 0;
        return this;
      }
      
      public bool HasSid {
        get { return result.hasSid; }
      }
      [global::System.CLSCompliant(false)]
      public uint Sid {
        get { return result.Sid; }
        set { SetSid(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSid(uint value) {
        PrepareBuilder();
        result.hasSid = true;
        result.sid_ = value;
        return this;
      }
      public Builder ClearSid() {
        PrepareBuilder();
        result.hasSid = false;
        result.sid_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasUnitid {
        get { return result.hasUnitid; }
      }
      [global::System.CLSCompliant(false)]
      public uint Unitid {
        get { return result.Unitid; }
        set { SetUnitid(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUnitid(uint value) {
        PrepareBuilder();
        result.hasUnitid = true;
        result.unitid_ = value;
        return this;
      }
      public Builder ClearUnitid() {
        PrepareBuilder();
        result.hasUnitid = false;
        result.unitid_ = 0;
        return this;
      }
    }
    static Input_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Result_Notify : pb::GeneratedMessage<Result_Notify, Result_Notify.Builder> {
    private Result_Notify() { }
    private static readonly Result_Notify defaultInstance = new Result_Notify().MakeReadOnly();
    private static readonly string[] _resultNotifyFieldNames = new string[] { "winnerID" };
    private static readonly uint[] _resultNotifyFieldTags = new uint[] { 8 };
    public static Result_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Result_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Result_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Result_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Result_Notify, Result_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Result_Notify__FieldAccessorTable; }
    }
    
    public const int WinnerIDFieldNumber = 1;
    private bool hasWinnerID;
    private ulong winnerID_;
    public bool HasWinnerID {
      get { return hasWinnerID; }
    }
    [global::System.CLSCompliant(false)]
    public ulong WinnerID {
      get { return winnerID_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _resultNotifyFieldNames;
      if (hasWinnerID) {
        output.WriteUInt64(1, field_names[0], WinnerID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasWinnerID) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, WinnerID);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Result_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Result_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Result_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Result_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Result_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Result_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Result_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Result_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Result_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Result_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Result_Notify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Result_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Result_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Result_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Result_Notify result;
      
      private Result_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          Result_Notify original = result;
          result = new Result_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Result_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Result_Notify.Descriptor; }
      }
      
      public override Result_Notify DefaultInstanceForType {
        get { return global::pb.Result_Notify.DefaultInstance; }
      }
      
      public override Result_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Result_Notify) {
          return MergeFrom((Result_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Result_Notify other) {
        if (other == global::pb.Result_Notify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasWinnerID) {
          WinnerID = other.WinnerID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_resultNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _resultNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasWinnerID = input.ReadUInt64(ref result.winnerID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasWinnerID {
        get { return result.hasWinnerID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong WinnerID {
        get { return result.WinnerID; }
        set { SetWinnerID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetWinnerID(ulong value) {
        PrepareBuilder();
        result.hasWinnerID = true;
        result.winnerID_ = value;
        return this;
      }
      public Builder ClearWinnerID() {
        PrepareBuilder();
        result.hasWinnerID = false;
        result.winnerID_ = 0UL;
        return this;
      }
    }
    static Result_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Ready_Request : pb::GeneratedMessage<Ready_Request, Ready_Request.Builder> {
    private Ready_Request() { }
    private static readonly Ready_Request defaultInstance = new Ready_Request().MakeReadOnly();
    private static readonly string[] _readyRequestFieldNames = new string[] {  };
    private static readonly uint[] _readyRequestFieldTags = new uint[] {  };
    public static Ready_Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Ready_Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Ready_Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Ready_Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Ready_Request, Ready_Request.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Ready_Request__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _readyRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Ready_Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ready_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ready_Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ready_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ready_Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ready_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Ready_Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Ready_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Ready_Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ready_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Ready_Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Ready_Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Ready_Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Ready_Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Ready_Request result;
      
      private Ready_Request PrepareBuilder() {
        if (resultIsReadOnly) {
          Ready_Request original = result;
          result = new Ready_Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Ready_Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Ready_Request.Descriptor; }
      }
      
      public override Ready_Request DefaultInstanceForType {
        get { return global::pb.Ready_Request.DefaultInstance; }
      }
      
      public override Ready_Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Ready_Request) {
          return MergeFrom((Ready_Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Ready_Request other) {
        if (other == global::pb.Ready_Request.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_readyRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _readyRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Ready_Request() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Ready_Response : pb::GeneratedMessage<Ready_Response, Ready_Response.Builder> {
    private Ready_Response() { }
    private static readonly Ready_Response defaultInstance = new Ready_Response().MakeReadOnly();
    private static readonly string[] _readyResponseFieldNames = new string[] { "error" };
    private static readonly uint[] _readyResponseFieldTags = new uint[] { 10 };
    public static Ready_Response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Ready_Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Ready_Response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Ready_Response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Ready_Response, Ready_Response.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Ready_Response__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private global::pb.errorInfo error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::pb.errorInfo Error {
      get { return error_ ?? global::pb.errorInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _readyResponseFieldNames;
      if (hasError) {
        output.WriteMessage(1, field_names[0], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Error);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Ready_Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ready_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ready_Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ready_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ready_Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ready_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Ready_Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Ready_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Ready_Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ready_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Ready_Response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Ready_Response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Ready_Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Ready_Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Ready_Response result;
      
      private Ready_Response PrepareBuilder() {
        if (resultIsReadOnly) {
          Ready_Response original = result;
          result = new Ready_Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Ready_Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Ready_Response.Descriptor; }
      }
      
      public override Ready_Response DefaultInstanceForType {
        get { return global::pb.Ready_Response.DefaultInstance; }
      }
      
      public override Ready_Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Ready_Response) {
          return MergeFrom((Ready_Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Ready_Response other) {
        if (other == global::pb.Ready_Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          MergeError(other.Error);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_readyResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _readyResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::pb.errorInfo.Builder subBuilder = global::pb.errorInfo.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::pb.errorInfo Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::pb.errorInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::pb.errorInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::pb.errorInfo.DefaultInstance) {
            result.error_ = global::pb.errorInfo.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
    }
    static Ready_Response() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinRoom_Notify : pb::GeneratedMessage<JoinRoom_Notify, JoinRoom_Notify.Builder> {
    private JoinRoom_Notify() { }
    private static readonly JoinRoom_Notify defaultInstance = new JoinRoom_Notify().MakeReadOnly();
    private static readonly string[] _joinRoomNotifyFieldNames = new string[] { "data" };
    private static readonly uint[] _joinRoomNotifyFieldTags = new uint[] { 18 };
    public static JoinRoom_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRoom_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRoom_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRoom_Notify, JoinRoom_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_JoinRoom_Notify__FieldAccessorTable; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::pb.roomInfo data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::pb.roomInfo Data {
      get { return data_ ?? global::pb.roomInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinRoomNotifyFieldNames;
      if (hasData) {
        output.WriteMessage(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasData) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinRoom_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRoom_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRoom_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoom_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRoom_Notify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRoom_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRoom_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRoom_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRoom_Notify result;
      
      private JoinRoom_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRoom_Notify original = result;
          result = new JoinRoom_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRoom_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.JoinRoom_Notify.Descriptor; }
      }
      
      public override JoinRoom_Notify DefaultInstanceForType {
        get { return global::pb.JoinRoom_Notify.DefaultInstance; }
      }
      
      public override JoinRoom_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRoom_Notify) {
          return MergeFrom((JoinRoom_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRoom_Notify other) {
        if (other == global::pb.JoinRoom_Notify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRoomNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRoomNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::pb.roomInfo.Builder subBuilder = global::pb.roomInfo.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::pb.roomInfo Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::pb.roomInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::pb.roomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::pb.roomInfo.DefaultInstance) {
            result.data_ = global::pb.roomInfo.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static JoinRoom_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Start_Notify : pb::GeneratedMessage<Start_Notify, Start_Notify.Builder> {
    private Start_Notify() { }
    private static readonly Start_Notify defaultInstance = new Start_Notify().MakeReadOnly();
    private static readonly string[] _startNotifyFieldNames = new string[] {  };
    private static readonly uint[] _startNotifyFieldTags = new uint[] {  };
    public static Start_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Start_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Start_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Start_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Start_Notify, Start_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Start_Notify__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _startNotifyFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Start_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Start_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Start_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Start_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Start_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Start_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Start_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Start_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Start_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Start_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Start_Notify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Start_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Start_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Start_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Start_Notify result;
      
      private Start_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          Start_Notify original = result;
          result = new Start_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Start_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Start_Notify.Descriptor; }
      }
      
      public override Start_Notify DefaultInstanceForType {
        get { return global::pb.Start_Notify.DefaultInstance; }
      }
      
      public override Start_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Start_Notify) {
          return MergeFrom((Start_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Start_Notify other) {
        if (other == global::pb.Start_Notify.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_startNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _startNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Start_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InputData : pb::GeneratedMessage<InputData, InputData.Builder> {
    private InputData() { }
    private static readonly InputData defaultInstance = new InputData().MakeReadOnly();
    private static readonly string[] _inputDataFieldNames = new string[] { "sid", "uid", "unitid", "x", "y" };
    private static readonly uint[] _inputDataFieldTags = new uint[] { 8, 168, 32, 21, 29 };
    public static InputData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InputData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InputData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_InputData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InputData, InputData.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_InputData__FieldAccessorTable; }
    }
    
    public const int SidFieldNumber = 1;
    private bool hasSid;
    private uint sid_;
    public bool HasSid {
      get { return hasSid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Sid {
      get { return sid_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int UnitidFieldNumber = 4;
    private bool hasUnitid;
    private uint unitid_;
    public bool HasUnitid {
      get { return hasUnitid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Unitid {
      get { return unitid_; }
    }
    
    public const int UidFieldNumber = 21;
    private bool hasUid;
    private ulong uid_;
    public bool HasUid {
      get { return hasUid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inputDataFieldNames;
      if (hasSid) {
        output.WriteUInt32(1, field_names[0], Sid);
      }
      if (hasX) {
        output.WriteFloat(2, field_names[3], X);
      }
      if (hasY) {
        output.WriteFloat(3, field_names[4], Y);
      }
      if (hasUnitid) {
        output.WriteUInt32(4, field_names[2], Unitid);
      }
      if (hasUid) {
        output.WriteUInt64(21, field_names[1], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Sid);
      }
      if (hasX) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Y);
      }
      if (hasUnitid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Unitid);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeUInt64Size(21, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InputData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InputData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InputData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InputData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InputData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InputData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InputData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InputData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InputData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InputData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InputData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InputData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InputData result;
      
      private InputData PrepareBuilder() {
        if (resultIsReadOnly) {
          InputData original = result;
          result = new InputData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InputData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.InputData.Descriptor; }
      }
      
      public override InputData DefaultInstanceForType {
        get { return global::pb.InputData.DefaultInstance; }
      }
      
      public override InputData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InputData) {
          return MergeFrom((InputData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InputData other) {
        if (other == global::pb.InputData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSid) {
          Sid = other.Sid;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasUnitid) {
          Unitid = other.Unitid;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inputDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inputDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSid = input.ReadUInt32(ref result.sid_);
              break;
            }
            case 21: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 29: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 32: {
              result.hasUnitid = input.ReadUInt32(ref result.unitid_);
              break;
            }
            case 168: {
              result.hasUid = input.ReadUInt64(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSid {
        get { return result.hasSid; }
      }
      [global::System.CLSCompliant(false)]
      public uint Sid {
        get { return result.Sid; }
        set { SetSid(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSid(uint value) {
        PrepareBuilder();
        result.hasSid = true;
        result.sid_ = value;
        return this;
      }
      public Builder ClearSid() {
        PrepareBuilder();
        result.hasSid = false;
        result.sid_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasUnitid {
        get { return result.hasUnitid; }
      }
      [global::System.CLSCompliant(false)]
      public uint Unitid {
        get { return result.Unitid; }
        set { SetUnitid(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUnitid(uint value) {
        PrepareBuilder();
        result.hasUnitid = true;
        result.unitid_ = value;
        return this;
      }
      public Builder ClearUnitid() {
        PrepareBuilder();
        result.hasUnitid = false;
        result.unitid_ = 0;
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUid(ulong value) {
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = 0UL;
        return this;
      }
    }
    static InputData() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FrameData : pb::GeneratedMessage<FrameData, FrameData.Builder> {
    private FrameData() { }
    private static readonly FrameData defaultInstance = new FrameData().MakeReadOnly();
    private static readonly string[] _frameDataFieldNames = new string[] { "frameID", "input" };
    private static readonly uint[] _frameDataFieldTags = new uint[] { 8, 18 };
    public static FrameData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FrameData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FrameData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_FrameData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FrameData, FrameData.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_FrameData__FieldAccessorTable; }
    }
    
    public const int FrameIDFieldNumber = 1;
    private bool hasFrameID;
    private uint frameID_;
    public bool HasFrameID {
      get { return hasFrameID; }
    }
    [global::System.CLSCompliant(false)]
    public uint FrameID {
      get { return frameID_; }
    }
    
    public const int InputFieldNumber = 2;
    private pbc::PopsicleList<global::pb.InputData> input_ = new pbc::PopsicleList<global::pb.InputData>();
    public scg::IList<global::pb.InputData> InputList {
      get { return input_; }
    }
    public int InputCount {
      get { return input_.Count; }
    }
    public global::pb.InputData GetInput(int index) {
      return input_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _frameDataFieldNames;
      if (hasFrameID) {
        output.WriteUInt32(1, field_names[0], FrameID);
      }
      if (input_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], input_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrameID) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, FrameID);
      }
      foreach (global::pb.InputData element in InputList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FrameData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FrameData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FrameData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FrameData MakeReadOnly() {
      input_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FrameData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FrameData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FrameData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FrameData result;
      
      private FrameData PrepareBuilder() {
        if (resultIsReadOnly) {
          FrameData original = result;
          result = new FrameData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FrameData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.FrameData.Descriptor; }
      }
      
      public override FrameData DefaultInstanceForType {
        get { return global::pb.FrameData.DefaultInstance; }
      }
      
      public override FrameData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FrameData) {
          return MergeFrom((FrameData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FrameData other) {
        if (other == global::pb.FrameData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrameID) {
          FrameID = other.FrameID;
        }
        if (other.input_.Count != 0) {
          result.input_.Add(other.input_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_frameDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _frameDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFrameID = input.ReadUInt32(ref result.frameID_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.input_, global::pb.InputData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrameID {
        get { return result.hasFrameID; }
      }
      [global::System.CLSCompliant(false)]
      public uint FrameID {
        get { return result.FrameID; }
        set { SetFrameID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFrameID(uint value) {
        PrepareBuilder();
        result.hasFrameID = true;
        result.frameID_ = value;
        return this;
      }
      public Builder ClearFrameID() {
        PrepareBuilder();
        result.hasFrameID = false;
        result.frameID_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::pb.InputData> InputList {
        get { return PrepareBuilder().input_; }
      }
      public int InputCount {
        get { return result.InputCount; }
      }
      public global::pb.InputData GetInput(int index) {
        return result.GetInput(index);
      }
      public Builder SetInput(int index, global::pb.InputData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.input_[index] = value;
        return this;
      }
      public Builder SetInput(int index, global::pb.InputData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.input_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInput(global::pb.InputData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.input_.Add(value);
        return this;
      }
      public Builder AddInput(global::pb.InputData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.input_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInput(scg::IEnumerable<global::pb.InputData> values) {
        PrepareBuilder();
        result.input_.Add(values);
        return this;
      }
      public Builder ClearInput() {
        PrepareBuilder();
        result.input_.Clear();
        return this;
      }
    }
    static FrameData() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FrameMsg_Notify : pb::GeneratedMessage<FrameMsg_Notify, FrameMsg_Notify.Builder> {
    private FrameMsg_Notify() { }
    private static readonly FrameMsg_Notify defaultInstance = new FrameMsg_Notify().MakeReadOnly();
    private static readonly string[] _frameMsgNotifyFieldNames = new string[] { "frames" };
    private static readonly uint[] _frameMsgNotifyFieldTags = new uint[] { 10 };
    public static FrameMsg_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FrameMsg_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FrameMsg_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_FrameMsg_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FrameMsg_Notify, FrameMsg_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_FrameMsg_Notify__FieldAccessorTable; }
    }
    
    public const int FramesFieldNumber = 1;
    private pbc::PopsicleList<global::pb.FrameData> frames_ = new pbc::PopsicleList<global::pb.FrameData>();
    public scg::IList<global::pb.FrameData> FramesList {
      get { return frames_; }
    }
    public int FramesCount {
      get { return frames_.Count; }
    }
    public global::pb.FrameData GetFrames(int index) {
      return frames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _frameMsgNotifyFieldNames;
      if (frames_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], frames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::pb.FrameData element in FramesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FrameMsg_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FrameMsg_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FrameMsg_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FrameMsg_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FrameMsg_Notify MakeReadOnly() {
      frames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FrameMsg_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FrameMsg_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FrameMsg_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FrameMsg_Notify result;
      
      private FrameMsg_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          FrameMsg_Notify original = result;
          result = new FrameMsg_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FrameMsg_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.FrameMsg_Notify.Descriptor; }
      }
      
      public override FrameMsg_Notify DefaultInstanceForType {
        get { return global::pb.FrameMsg_Notify.DefaultInstance; }
      }
      
      public override FrameMsg_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FrameMsg_Notify) {
          return MergeFrom((FrameMsg_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FrameMsg_Notify other) {
        if (other == global::pb.FrameMsg_Notify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.frames_.Count != 0) {
          result.frames_.Add(other.frames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_frameMsgNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _frameMsgNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.frames_, global::pb.FrameData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::pb.FrameData> FramesList {
        get { return PrepareBuilder().frames_; }
      }
      public int FramesCount {
        get { return result.FramesCount; }
      }
      public global::pb.FrameData GetFrames(int index) {
        return result.GetFrames(index);
      }
      public Builder SetFrames(int index, global::pb.FrameData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.frames_[index] = value;
        return this;
      }
      public Builder SetFrames(int index, global::pb.FrameData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.frames_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFrames(global::pb.FrameData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.frames_.Add(value);
        return this;
      }
      public Builder AddFrames(global::pb.FrameData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.frames_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFrames(scg::IEnumerable<global::pb.FrameData> values) {
        PrepareBuilder();
        result.frames_.Add(values);
        return this;
      }
      public Builder ClearFrames() {
        PrepareBuilder();
        result.frames_.Clear();
        return this;
      }
    }
    static FrameMsg_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Win_Notify : pb::GeneratedMessage<Win_Notify, Win_Notify.Builder> {
    private Win_Notify() { }
    private static readonly Win_Notify defaultInstance = new Win_Notify().MakeReadOnly();
    private static readonly string[] _winNotifyFieldNames = new string[] { "winnerID" };
    private static readonly uint[] _winNotifyFieldTags = new uint[] { 8 };
    public static Win_Notify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Win_Notify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Win_Notify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::pb.Message.internal__static_pb_Win_Notify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Win_Notify, Win_Notify.Builder> InternalFieldAccessors {
      get { return global::pb.Message.internal__static_pb_Win_Notify__FieldAccessorTable; }
    }
    
    public const int WinnerIDFieldNumber = 1;
    private bool hasWinnerID;
    private ulong winnerID_;
    public bool HasWinnerID {
      get { return hasWinnerID; }
    }
    [global::System.CLSCompliant(false)]
    public ulong WinnerID {
      get { return winnerID_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _winNotifyFieldNames;
      if (hasWinnerID) {
        output.WriteUInt64(1, field_names[0], WinnerID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasWinnerID) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, WinnerID);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Win_Notify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Win_Notify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Win_Notify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Win_Notify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Win_Notify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Win_Notify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Win_Notify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Win_Notify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Win_Notify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Win_Notify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Win_Notify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Win_Notify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Win_Notify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Win_Notify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Win_Notify result;
      
      private Win_Notify PrepareBuilder() {
        if (resultIsReadOnly) {
          Win_Notify original = result;
          result = new Win_Notify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Win_Notify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::pb.Win_Notify.Descriptor; }
      }
      
      public override Win_Notify DefaultInstanceForType {
        get { return global::pb.Win_Notify.DefaultInstance; }
      }
      
      public override Win_Notify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Win_Notify) {
          return MergeFrom((Win_Notify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Win_Notify other) {
        if (other == global::pb.Win_Notify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasWinnerID) {
          WinnerID = other.WinnerID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_winNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _winNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasWinnerID = input.ReadUInt64(ref result.winnerID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasWinnerID {
        get { return result.hasWinnerID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong WinnerID {
        get { return result.WinnerID; }
        set { SetWinnerID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetWinnerID(ulong value) {
        PrepareBuilder();
        result.hasWinnerID = true;
        result.winnerID_ = value;
        return this;
      }
      public Builder ClearWinnerID() {
        PrepareBuilder();
        result.hasWinnerID = false;
        result.winnerID_ = 0UL;
        return this;
      }
    }
    static Win_Notify() {
      object.ReferenceEquals(global::pb.Message.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
